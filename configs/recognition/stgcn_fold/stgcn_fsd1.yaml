MODEL: #MODEL field
   framework: "RecognizerGCN" #Mandatory, indicate the type of network, associate to the 'paddlevideo/modeling/framework/' .
   backbone: #Mandatory, indicate the type of backbone, associate to the 'paddlevideo/modeling/backbones/' .
       name: "STGCN" #Mandatory, The name of backbone.
   head:
       name: "STGCNHead" #Mandatory, indicate the type of head, associate to the 'paddlevideo/modeling/heads'
       num_classes: 30  #Optional, the number of classes to be classified.
       ls_eps: 0.1

DATASET: #DATASET field
   batch_size: 64 #Mandatory, bacth size
   num_workers: 4 #Mandatory, the number of subprocess on each GPU.
   val_batch_size: 64
   val_num_workers: 4
   test_batch_size: 1
   test_num_workers: 0
   train:
       format: "SkeletonDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
       file_path: "DATASET_DIR/origin_fold/fold1_train_data.npy" #Mandatory, train data index file path
       label_path: "DATASET_DIR/origin_fold/fold1_train_label.npy"
   valid:
       format: "SkeletonDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
       file_path: "DATASET_DIR/origin_fold/fold1_valid_data.npy" #Mandatory, train data index file path
       label_path: "DATASET_DIR/origin_fold/fold1_valid_label.npy"
   test:
       format: "SkeletonDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
       file_path: "DATASET_DIR/fixed1_test_B_data.npy" #Mandatory, valid data index file path
       test_mode: True

PIPELINE: #PIPELINE field
   train: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
       sample:
           name: "AutoPadding"
           window_size: 350 #todo test code 350
        #    random_size: True
        #    min_window_size: 300
        #    max_window_size: 450
       transform: #Mandotary, image transfrom operator
        #    - CutOut:
        #        alpha: 0.4
           - SkeletonNorm:
               axis: 2
        #    - YaxisScaling:
        #        alpha: 0.1
        #    - Rotate:
        #        alpha: 10
        #    - Scaling:
        #        alpha: 0.2
   valid: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
       sample:
           name: "AutoPadding"
           window_size: 350 #todo test code 350
       transform: #Mandotary, image transfrom operator
           - SkeletonNorm:
   test: #Mandatory, indicate the pipeline to deal with the validing data. associate to the 'paddlevideo/loader/pipelines/'
       sample:
           name: "AutoPadding"
           window_size: 350
       transform: #Mandotary, image transfrom operator
           - SkeletonNorm:

OPTIMIZER: #OPTIMIZER field
 name: 'Momentum'
 momentum: 0.9
 learning_rate:
   iter_step: True
   name: 'CustomWarmupCosineDecay'
   max_epoch: 100
   warmup_epochs: 10
   warmup_start_lr: 0.005
   cosine_base_lr: 0.05
 weight_decay:
   name: 'L2'
   value: 1e-4

# MIX:
#    name: "Mixup"
#    alpha: 0.2


METRIC:
   name: 'SkeletonMetric'
   out_dir: "./output/STGCN_fold1"
   out_file: 'submission.csv'



#INFERENCE:
#   name: 'STGCN_Inference_helper'
#   num_channels: 2 #TODO debug code 2
#   window_size: 350
#   vertex_nums: 25
#   person_nums: 1


model_name: "STGCN"
log_interval: 10 #Optional, the interal of logger, default:10
epochs: 90 #Mandatory, total epoch
output_dir: "./output/STGCN_fold1"